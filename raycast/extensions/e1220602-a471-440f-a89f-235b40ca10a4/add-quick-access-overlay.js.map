{
  "version": 3,
  "sources": ["../src/add-quick-access-overlay.tsx", "../src/utils.ts"],
  "sourcesContent": ["import { LaunchProps, closeMainWindow, open, showToast, Toast } from \"@raycast/api\";\nimport { getSelectedFinderPaths } from \"./utils\";\n\nexport default async function Command(props: LaunchProps<{ arguments: Arguments.AddQuickAccessOverlay }>) {\n  const url = \"cleanshot://add-quick-access-overlay\";\n  const filepaths = props.arguments?.filepath ? [props.arguments.filepath] : await getSelectedFinderPaths();\n\n  if (filepaths.length === 0) {\n    return showToast({\n      style: Toast.Style.Failure,\n      title: \"No file selected\",\n      message: \"Provide a file path or select a file in Finder\",\n    });\n  }\n  await closeMainWindow();\n  filepaths.forEach((filepath) => open(`${url}?filepath=${encodeURIComponent(filepath)}`));\n}\n", "import { getSelectedFinderItems } from \"@raycast/api\";\n\nexport async function getSelectedFinderPaths(): Promise<string[]> {\n  return getSelectedFinderItems()\n    .then((items) => {\n      return items.map((item) => item.path);\n    })\n    .catch(() => {\n      return [];\n    });\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAqE,wBCArE,IAAAC,EAAuC,wBAEvC,eAAsBC,GAA4C,CAChE,SAAO,0BAAuB,EAC3B,KAAMC,GACEA,EAAM,IAAKC,GAASA,EAAK,IAAI,CACrC,EACA,MAAM,IACE,CAAC,CACT,CACL,CDPA,eAAOC,EAA+BC,EAAoE,CACxG,IAAMC,EAAM,uCACNC,EAAYF,EAAM,WAAW,SAAW,CAACA,EAAM,UAAU,QAAQ,EAAI,MAAMG,EAAuB,EAExG,GAAID,EAAU,SAAW,EACvB,SAAO,aAAU,CACf,MAAO,QAAM,MAAM,QACnB,MAAO,mBACP,QAAS,gDACX,CAAC,EAEH,QAAM,mBAAgB,EACtBA,EAAU,QAASE,MAAa,QAAK,GAAGH,CAAG,aAAa,mBAAmBG,CAAQ,CAAC,EAAE,CAAC,CACzF",
  "names": ["add_quick_access_overlay_exports", "__export", "Command", "__toCommonJS", "import_api", "import_api", "getSelectedFinderPaths", "items", "item", "Command", "props", "url", "filepaths", "getSelectedFinderPaths", "filepath"]
}
